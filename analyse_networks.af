topolological_analysis){
	#GET NETWORK TOPOLOGY 
	module load R/4.1.0
	PATH=$current_dir'/scripts/rscripts':$PATH
	export PATH
	net_name=`basename $working_net`
    net_type=`echo $net_name | sed 's/_[0-9]*$//g'`
	?
	network_topology_analysis.R -i $working_net -o hpo_frequency > topol_results
	while read topological_metric
	do
        echo -e "$net_name\t$net_type\t$topological_metric" >> ../topological_metrics
	done < topol_results
    echo -e "$net_name\t$net_type\ttop_analysis\t`pwd`/hpo_frequency" >> ../topological_metrics
}

linkcomm_clustering_analysis){
	#GET LINKCOMM CLUSTERS
	#LOAD R and PYTHON
	module load R/4.1.0
	module load python/3.9.13
		
	PATH=$current_dir'/scripts/rscripts':$PATH
	PATH=/mnt/home/users/bio_267_uma/elenads/scripts/py_scripts:$PATH
	export PATH
	net_name=`basename $working_net`
	net_type=`echo $net_name | sed 's/_[0-9]*$//g'`
	?
	#obtain -linkcomm clusters
	clustering.R -i $working_net -n clusters_file -c cytoscape_file -e $net_name'_clusters'

	#obtain names for each hpo of each cluster
	get_hpo_names.py -d $hpo_dictionary -A 0 -a 1 -l clusters_file -B 0 > clusters_file_with_names

	#obtain metrics
	echo -e "$net_name\t$net_type\tlinkcomm_cluster_number\t`cut -f 2 clusters_file | sort -u | wc -l`" >> ../metrics
	echo -e "$net_name\t$net_type\tlinkcomm_HPO_number\t`cut -f 1 clusters_file | sort -u | wc -l`" >> ../metrics
	calculate_cluster_average.py -c clusters_file -A 1 -B 0 -e  -p  -m $net_type -n $net_name >> ../metrics
}

analyse_linkcomm_clusters_[KEGG;Reactome;BP;MF;CC]){
	#GET LINKCOMM COHERENT CLUSTERS
	#LOAD PYTHON
	module load python/3.8.8
	PATH=$current_dir'/scripts/py_scripts':$PATH
	export PATH
	net_name=`basename $working_net`
	net_type=`echo $net_name | sed 's/_[0-9]*$//g'`
	parsed_p_values=`echo '$p_values' | tr '/' ' '`
	for PVALUE in $parsed_p_values
	do
	?
		clusters_single_funsys_merger.py -c linkcomm_clustering_analysis)/clusters_file -A 1 -a 0 -x $single_enrichments/enrichment_glycosylation_$PVALUE/glycosylation_phen2(*)_$PVALUE.txt -B 0 -b 1 -n 2 -g 8 -t 50 -d $all_diseases_data -F 0 -f 1 -e (*) -i $phen2gene -K 0 -k 1 > clusters_with_50_coherence_systems_(*)_$PVALUE

		echo -e "$net_name\t$net_type\tlinkcomm_cluster_with_50_coherence_(*)_$PVALUE\t`cut -f 1 clusters_with_50_coherence_systems_(*)_$PVALUE | sort -u | wc -l`" >> ../metrics
		
		clusters_single_funsys_merger.py -c linkcomm_clustering_analysis)/clusters_file -A 1 -a 0 -x $single_enrichments/enrichment_glycosylation_$PVALUE/glycosylation_phen2(*)_$PVALUE.txt -B 0 -b 1 -n 2 -g 8 -t 70 -d $all_diseases_data -F 0 -f 1 -e (*) -i $phen2gene -K 0 -k 1 > clusters_with_70_coherence_systems_(*)_$PVALUE

		echo -e "$net_name\t$net_type\tlinkcomm_cluster_with_70_coherence_(*)_$PVALUE\t`cut -f 1 clusters_with_70_coherence_systems_(*)_$PVALUE | sort -u | wc -l`" >> ../metrics
		
	done
}

unify_clusters_data){
	#UNIFY LINKCOMM COHERENT CLUSTERS
	net_name=`basename $working_net`
	net_type=`echo $net_name | sed 's/_[0-9]*$//g'`
	parsed_p_values=`echo '$p_values' | tr '/' ' '`

	for PVALUE in $parsed_p_values
	do
	?
		cat !analyse_linkcomm_clusters_!/clusters_with_50_coherence_systems_*_$PVALUE | sort -k1 -n > clusters_with_50_coherence_$PVALUE
		echo -e "$net_name\t$net_type\tlinkcomm_cluster_with_50_coherence_$PVALUE\t`cut -f 1 clusters_with_50_coherence_$PVALUE | sort -u | wc -l`" >> ../metrics

		cat !analyse_linkcomm_clusters_!/clusters_with_70_coherence_systems_*_$PVALUE | sort -k1 -n > clusters_with_70_coherence_$PVALUE
		echo -e "$net_name\t$net_type\tlinkcomm_cluster_with_70_coherence_$PVALUE\t`cut -f 1 clusters_with_70_coherence_$PVALUE | sort -u | wc -l`" >> ../metrics

	done
}

unify_clusters_data_without_go){
	#UNIFY LINKCOMM COHERENT CLUSTERS WITHOUT GO
	net_name=`basename $working_net`
	net_type=`echo $net_name | sed 's/_[0-9]*$//g'`
	parsed_p_values=`echo '$p_values' | tr '/' ' '`

	for PVALUE in $parsed_p_values
	do
	?
		cat analyse_linkcomm_clusters_KEGG)/clusters_with_50_coherence_systems_KEGG_$PVALUE | sort -k1 -n > clusters_with_50_coherence_$PVALUE
		cat analyse_linkcomm_clusters_Reactome)/clusters_with_50_coherence_systems_Reactome_$PVALUE | sort -k1 -n >> clusters_with_50_coherence_$PVALUE
		echo -e "$net_name\t$net_type\tlinkcomm_cluster_with_50_coherence_without_go_$PVALUE\t`cut -f 1 clusters_with_50_coherence_$PVALUE | sort -u | wc -l`" >> ../metrics

		cat analyse_linkcomm_clusters_KEGG)/clusters_with_70_coherence_systems_KEGG_$PVALUE | sort -k1 -n > clusters_with_70_coherence_$PVALUE
		cat analyse_linkcomm_clusters_Reactome)/clusters_with_70_coherence_systems_Reactome_$PVALUE | sort -k1 -n >> clusters_with_70_coherence_$PVALUE
		echo -e "$net_name\t$net_type\tlinkcomm_cluster_with_70_coherence_without_go_$PVALUE\t`cut -f 1 clusters_with_70_coherence_$PVALUE | sort -u | wc -l`" >> ../metrics

	done
}
